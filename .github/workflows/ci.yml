name: ci

permissions:
  actions: write
  checks: write
  contents: read
  # deployments: read|write|none
  # id-token: read|write|none
  # issues: read|write|none
  # discussions: read|write|none
  # metadata: read|write|none
  packages: write
  # pages: read|write|none
  # pull-requests: read|write|none
  # repository-projects: read|write|none
  # security-events: read|write|none
  statuses: write

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Build, export to Docker, and test
        uses: docker/build-push-action@v3
        with:
          context: .
          target: test
          platforms: ${{ matrix.platform }}
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}

      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          target: base
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
